"use strict";var __decorate=this&&this.__decorate||function(e,t,o,n){var a,r=arguments.length,i=3>r?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(3>r?a(i):r>3?a(t,o,i):a(t,o))||i);return r>3&&i&&Object.defineProperty(t,o,i),i},__metadata=this&&this.__metadata||function(e,t){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(e,t):void 0},core_1=require("@angular/core"),player_service_1=require("../services/player.service"),landing_component_1=require("./landing.component"),about_component_1=require("./about.component"),dashboard_component_1=require("./dashboard.component"),router_1=require("@angular/router"),PlayerComponent=function(){function e(e,t){this._playerService=e,this.router=t,this.title="Deezer Challenge",this.numberUsersPerTeam=3,this.input="nothing",this.aresponse="nothing",this.changedTrack=!1,window.addEventListener("deviceorientation",function(e){console.log(e.alpha),console.log(e.beta),console.log(e.gamma),this.alpha=e.alpha,this.beta=e.beta,this.gamma=e.gamma,e.beta<-20&&0==this.changedTrack&&(this.nextTrack(),this.changedTrack=!0),e.beta>30&&(this.changedTrack=!1)}.bind(this),!0)}return e.prototype.ngOnInit=function(){this.router.navigate(["/"]),firebase=this._playerService.getFirebaseDB(),DZ.init({appId:"180442",channelUrl:"http://sonard.herokuapp.com/",player:{container:"player",width:300,height:300,format:"square",onload:function(){}}}),DZ.getLoginStatus(function(e){console.log("status"),e.authResponse?console.log("logged in"):console.log("not logged in")}.bind(this))},e.prototype.login=function(){DZ.login(function(e){"connected"==e.status?(console.log("Welcome!  Fetching your information.... "),DZ.api("/user/me",function(e){console.log("Good to see you, "+e.name+"."),this.initUser(e)}.bind(this))):console.log("User cancelled login or did not fully authorize.")}.bind(this),{perms:"basic_access,email, manage_library, manage_community, listening_history, offline_access"})},e.prototype.status=function(){DZ.getLoginStatus(function(e){console.log("status"),e.authResponse?console.log("logged in"):console.log("not logged in")})},e.prototype.myName=function(){function e(e){console.log("Latitude: "+e.coords.latitude),console.log("Longitude: "+e.coords.longitude)}DZ.api("/user/me",function(e){console.log("My name",e.name)}),navigator.geolocation&&navigator.geolocation.getCurrentPosition(e)},e.prototype.nextTrack=function(){DZ.player.next()},e.prototype.playMusic=function(){DZ.player.playPlaylist(1483340617)},e.prototype.logout=function(){DZ.logout()},e.prototype.initUser=function(e){firebase.database().ref("users/"+e.id).on("value",function(t){"undefined"!=typeof t.val()&&null!==t.val()||this.checkTeams(e)}.bind(this))},e.prototype.checkTeams=function(e){firebase.database().ref("teams").once("value").then(function(t){if("undefined"==typeof t.val())this._playerService.createNewTeamAndAddUser(e);else{var o=JSON.parse(JSON.stringify(t.val()));console.log(o);var n=Object.keys(o).length;for(var a in o){if(o.hasOwnProperty(a)){var r=JSON.parse(JSON.stringify(o[a])).members,i=Object.keys(r).length;if(console.log(i),i<this.numberUsersPerTeam){console.log("less than 3"),this._playerService.addUserToExistingTeam(e,a);break}1===n&&(console.log("last team"),this._playerService.createNewTeamAndAddUser(e))}n-=1}}}.bind(this))},e=__decorate([core_1.Component({selector:"player-cmp",templateUrl:"player/templates/todo.html",styleUrls:["player/styles/todo.css"],providers:[player_service_1.PlayerService],directives:[router_1.ROUTER_DIRECTIVES]}),router_1.Routes([{path:"/",component:landing_component_1.LandingComponent},{path:"/about",component:about_component_1.AboutComponent},{path:"/dashboard",component:dashboard_component_1.DashboardComponent}]),__metadata("design:paramtypes",[player_service_1.PlayerService,router_1.Router])],e)}();exports.PlayerComponent=PlayerComponent;