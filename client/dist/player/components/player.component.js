"use strict";var __decorate=this&&this.__decorate||function(e,o,t,n){var a,i=arguments.length,s=3>i?o:null===n?n=Object.getOwnPropertyDescriptor(o,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,o,t,n);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(3>i?a(s):i>3?a(o,t,s):a(o,t))||s);return i>3&&s&&Object.defineProperty(o,t,s),s},__metadata=this&&this.__metadata||function(e,o){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(e,o):void 0},core_1=require("@angular/core"),player_service_1=require("../services/player.service"),PlayerComponent=function(){function e(e){this._playerService=e,this.title="Deezer Challenge",this.input="nothing",this.aresponse="nothing",this.changedTrack=!1,window.addEventListener("deviceorientation",function(e){console.log(e.alpha),console.log(e.beta),console.log(e.gamma),this.alpha=e.alpha,this.beta=e.beta,this.gamma=e.gamma,e.beta<-20&&0==this.changedTrack&&(this.nextTrack(),this.changedTrack=!0),e.beta>30&&(this.changedTrack=!1)}.bind(this),!0)}return e.prototype.ngOnInit=function(){firebase=this._playerService.getFirebaseDB(),DZ.init({appId:"180442",channelUrl:"http://sonard.herokuapp.com/",player:{container:"player",width:300,height:300,format:"square",onload:function(){}}}),DZ.getLoginStatus(function(e){console.log("status"),e.authResponse?console.log("logged in"):console.log("not logged in")}.bind(this))},e.prototype.login=function(){DZ.login(function(e){"connected"==e.status?(console.log("Welcome!  Fetching your information.... "),DZ.api("/user/me",function(e){console.log("Good to see you, "+e.name+"."),this.initUser(e)}.bind(this))):console.log("User cancelled login or did not fully authorize.")}.bind(this),{perms:"basic_access,email, manage_library, manage_community, listening_history, offline_access"})},e.prototype.status=function(){DZ.getLoginStatus(function(e){console.log("status"),e.authResponse?console.log("logged in"):console.log("not logged in")})},e.prototype.myName=function(){function e(e){console.log("Latitude: "+e.coords.latitude),console.log("Longitude: "+e.coords.longitude)}DZ.api("/user/me",function(e){console.log("My name",e.name)}),navigator.geolocation&&navigator.geolocation.getCurrentPosition(e)},e.prototype.nextTrack=function(){DZ.player.next()},e.prototype.playMusic=function(){DZ.player.playPlaylist(1483340617)},e.prototype.logout=function(){DZ.logout()},e.prototype.initUser=function(e){firebase.database().ref("users/"+e.id).on("value",function(o){"undefined"==typeof o.val()||null===o.val()?(console.log("new user"),this.checkTeams(e)):(console.log("returning user"),console.log(o.val()))}.bind(this))},e.prototype.checkTeams=function(e){firebase.database().ref("teams").on("value",function(o){if("undefined"==typeof o.val())console.log("all teams undefined"),this._playerService.createNewTeamAndAddUser(e);else{console.log("there are teams");var t=JSON.parse(JSON.stringify(o.val()));console.log(t);var n=Object.keys(t).length;for(var a in t){if(t.hasOwnProperty(a)){console.log(JSON.parse(JSON.stringify(t[a]))),console.log(JSON.parse(JSON.stringify(t[a])).members);var i=JSON.parse(JSON.stringify(t[a])).members,s=Object.keys(i).length;if(console.log(s),3>s){console.log("less than 3"),this._playerService.addUserToExistingTeam(e,a);break}1===n&&(console.log("last team"),this._playerService.createNewTeamAndAddUser(e))}n-=1}console.log("finished")}}.bind(this))},e=__decorate([core_1.Component({selector:"player-cmp",templateUrl:"player/templates/todo.html",styleUrls:["player/styles/todo.css"],providers:[player_service_1.PlayerService]}),__metadata("design:paramtypes",[player_service_1.PlayerService])],e)}();exports.PlayerComponent=PlayerComponent;