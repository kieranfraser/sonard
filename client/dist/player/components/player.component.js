"use strict";var __decorate=this&&this.__decorate||function(e,t,o,r){var a,n=arguments.length,s=3>n?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(3>n?a(s):n>3?a(t,o,s):a(t,o))||s);return n>3&&s&&Object.defineProperty(t,o,s),s},__metadata=this&&this.__metadata||function(e,t){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(e,t):void 0},core_1=require("@angular/core"),player_service_1=require("../services/player.service"),landing_component_1=require("./landing.component"),about_component_1=require("./about.component"),dashboard_component_1=require("./dashboard.component"),router_1=require("@angular/router"),PlayerComponent=function(){function e(e,t){this._playerService=e,this.router=t,this.title="Deezer Challenge",this.numberUsersPerTeam=3}return e.prototype.ngOnInit=function(){firebase=this._playerService.getFirebaseDB(),this.router.navigate(["/"]),DZ.init({appId:"180442",channelUrl:"http://sonard.herokuapp.com/",player:{container:"player",width:300,height:60,onload:function(){}}}),DZ.Event.subscribe("current_track",function(e){console.log("current_track"),console.log(e),DZ.api("/track/"+e.track.id,function(e){console.log(e),console.log("BPM: "+e.bpm)})}),DZ.getLoginStatus(function(e){e.authResponse&&(console.log("already logged in"),firebase.database().ref("users/"+e.userID).once("value").then(function(e){console.log("user:"),console.log(e.val().teamAssigned),localStorage.setItem("userF",JSON.stringify(e.val())),DZ.api("/user/me",function(e){localStorage.setItem("userD",JSON.stringify(e)),this.router.navigate(["/dashboard"])}.bind(this))}.bind(this)))}.bind(this))},e.prototype.login=function(){DZ.login(function(e){"connected"==e.status?DZ.api("/user/me",function(e){this.initUser(e)}.bind(this)):console.log("User cancelled login or did not fully authorize.")}.bind(this),{perms:"basic_access,email, manage_library, manage_community, listening_history, offline_access"})},e.prototype.logout=function(){DZ.logout();var e=JSON.parse(localStorage.getItem("userD")).id,t=JSON.parse(localStorage.getItem("team")).id;firebase.database().ref("teams/"+t+"/members/"+e).remove(),localStorage.removeItem("userD"),localStorage.removeItem("team"),this.router.navigate(["/"])},e.prototype.initUser=function(e){firebase.database().ref("users/"+e.id).once("value").then(function(t){localStorage.setItem("userD",JSON.stringify(e)),"undefined"==typeof t.val()||null===t.val()?this.addUser(e):localStorage.setItem("userF",JSON.stringify(t.val()))}.bind(this))},e.prototype.checkTeams=function(e,t){console.log("check teams"),firebase.database().ref("teams").once("value").then(function(o){if("undefined"==typeof o.val()||null===o.val())console.log("if of checkTeams"),this._playerService.createNewTeamAndAddUser(e,t);else{var r=JSON.parse(JSON.stringify(o.val()));console.log(r);var a=Object.keys(r).length;for(var n in r)if(r.hasOwnProperty(n)){var s=JSON.parse(JSON.stringify(r[n])).members,i=Object.keys(s).length;if(console.log(i),i<this.numberUsersPerTeam){console.log("less than 3"),this._playerService.addUserToExistingTeam(e,n,t);break}1===a&&(console.log("last team"),this._playerService.createNewTeamAndAddUser(e,t)),a-=1}}this.router.navigate(["/dashboard"])}.bind(this))},e.prototype.getFirebase=function(){return firebase},e.prototype.home=function(){DZ.getLoginStatus(function(e){e.authResponse?this.router.navigate(["/dashboard"]):this.router.navigate(["/"])}.bind(this))},e.prototype.addUser=function(e){this._playerService.addUser(e),this.router.navigate(["/dashboard"])},e=__decorate([core_1.Component({selector:"player-cmp",templateUrl:"player/templates/todo.html",styleUrls:["player/styles/todo.css"],providers:[player_service_1.PlayerService,dashboard_component_1.DashboardComponent],directives:[router_1.ROUTER_DIRECTIVES]}),router_1.Routes([{path:"/",component:landing_component_1.LandingComponent},{path:"/about",component:about_component_1.AboutComponent},{path:"/dashboard",component:dashboard_component_1.DashboardComponent}]),__metadata("design:paramtypes",[player_service_1.PlayerService,router_1.Router])],e)}();exports.PlayerComponent=PlayerComponent;