"use strict";var __decorate=this&&this.__decorate||function(e,t,o,a){var r,n=arguments.length,i=3>n?t:null===a?a=Object.getOwnPropertyDescriptor(t,o):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,a);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(3>n?r(i):n>3?r(t,o,i):r(t,o))||i);return n>3&&i&&Object.defineProperty(t,o,i),i},__metadata=this&&this.__metadata||function(e,t){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(e,t):void 0},core_1=require("@angular/core"),player_service_1=require("../services/player.service"),landing_component_1=require("./landing.component"),about_component_1=require("./about.component"),dashboard_component_1=require("./dashboard.component"),router_1=require("@angular/router"),PlayerComponent=function(){function e(e,t){this._playerService=e,this.router=t,this.title="Deezer Challenge",this.numberUsersPerTeam=3}return e.prototype.ngOnInit=function(){firebase=this._playerService.getFirebaseDB(),this.router.navigate(["/"]),DZ.init({appId:"180442",channelUrl:"http://sonard.herokuapp.com/",player:{container:"player",width:300,height:60,onload:function(){}}}),DZ.Event.subscribe("current_track",function(e){console.log("current_track"),console.log(e),DZ.api("/track/"+e.track.id,function(e){console.log(e),console.log("BPM: "+e.bpm)})}),DZ.getLoginStatus(function(e){e.authResponse&&(console.log("already logged in"),this.router.navigate(["/dashboard"]))}.bind(this))},e.prototype.login=function(){DZ.login(function(e){"connected"==e.status?DZ.api("/user/me",function(e){this.initUser(e)}.bind(this)):console.log("User cancelled login or did not fully authorize.")}.bind(this),{perms:"basic_access,email, manage_library, manage_community, listening_history, offline_access"})},e.prototype.logout=function(){DZ.logout(),localStorage.removeItem("user"),localStorage.removeItem("team"),this.router.navigate(["/"])},e.prototype.initUser=function(e){firebase.database().ref("users/"+e.id).once("value").then(function(t){localStorage.setItem("user",JSON.stringify(e)),"undefined"==typeof t.val()||null===t.val()?this.checkTeams(e,!1):this.checkTeams(e,!0)}.bind(this))},e.prototype.checkTeams=function(e,t){console.log("check teams"),firebase.database().ref("teams").once("value").then(function(o){if("undefined"==typeof o.val()||null===o.val())console.log("if of checkTeams"),this._playerService.createNewTeamAndAddUser(e,t);else{var a=JSON.parse(JSON.stringify(o.val()));console.log(a);var r=Object.keys(a).length;for(var n in a)if(a.hasOwnProperty(n)){var i=JSON.parse(JSON.stringify(a[n])).members,s=Object.keys(i).length;if(console.log(s),s<this.numberUsersPerTeam){console.log("less than 3"),this._playerService.addUserToExistingTeam(e,n,t);break}1===r&&(console.log("last team"),this._playerService.createNewTeamAndAddUser(e,t)),r-=1}}this.initTeams()}.bind(this))},e.prototype.getFirebase=function(){return firebase},e.prototype.home=function(){DZ.getLoginStatus(function(e){e.authResponse?this.router.navigate(["/dashboard"]):this.router.navigate(["/"])}.bind(this))},e.prototype.initTeams=function(){console.log("initTeams");var e=localStorage.getItem("user");console.log(JSON.parse(e).id),firebase().database().ref("users/"+JSON.parse(e).id).on("value",function(e){console.log("firebase"),localStorage.setItem("team",e.val().currentTeam),this.getTeamList()}.bind(this))},e.prototype.getTeamList=function(){console.log("get team list");var e=[];firebase().database().ref("teams/"+localStorage.getItem("team")).on("value",function(t){var o=JSON.parse(JSON.stringify(t.val().members)),a=JSON.parse(JSON.stringify(t.val().teamName));console.log(a);for(var r in o)o.hasOwnProperty(r)&&(console.log(r),e.push(r));this.populateTeamList(e)}.bind(this))},e.prototype.populateTeamList=function(e){this.teamList=[];for(var t=0,o=e;t<o.length;t++){var a=o[t];firebase.database().ref("users/"+a).on("value",function(e){this.teamList.push(e.val().username)}.bind(this))}this.router.navigate(["/dashboard"])},e=__decorate([core_1.Component({selector:"player-cmp",templateUrl:"player/templates/todo.html",styleUrls:["player/styles/todo.css"],providers:[player_service_1.PlayerService,dashboard_component_1.DashboardComponent],directives:[router_1.ROUTER_DIRECTIVES]}),router_1.Routes([{path:"/",component:landing_component_1.LandingComponent},{path:"/about",component:about_component_1.AboutComponent},{path:"/dashboard",component:dashboard_component_1.DashboardComponent}]),__metadata("design:paramtypes",[player_service_1.PlayerService,router_1.Router])],e)}();exports.PlayerComponent=PlayerComponent;