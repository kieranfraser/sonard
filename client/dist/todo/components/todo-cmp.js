"use strict";var __decorate=this&&this.__decorate||function(o,e,t,n){var r,i=arguments.length,c=3>i?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(o,e,t,n);else for(var s=o.length-1;s>=0;s--)(r=o[s])&&(c=(3>i?r(c):i>3?r(e,t,c):r(e,t))||c);return i>3&&c&&Object.defineProperty(e,t,c),c},__metadata=this&&this.__metadata||function(o,e){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(o,e):void 0},__param=this&&this.__param||function(o,e){return function(t,n){e(t,n,o)}},core_1=require("@angular/core"),common_1=require("@angular/common"),todo_service_1=require("../services/todo-service"),TodoCmp=function(){function o(o,e){this._todoService=e,this.title="ng2do",this.todos=[],this.todoForm=o.group({todoMessage:["",common_1.Validators.required]})}return o.prototype.ngOnInit=function(){console.log("in init"),DZ.init({appId:"180442",channelUrl:"http://sonard.herokuapp.com/"}),this._getAll()},o.prototype._getAll=function(){var o=this;this._todoService.getAll().subscribe(function(e){o.todos=e})},o.prototype.add=function(o){var e=this;this._todoService.add(o).subscribe(function(o){e.todos.push(o),e.todoForm.controls.todoMessage.updateValue("")})},o.prototype.remove=function(o){var e=this;this._todoService.remove(o).subscribe(function(){e.todos.forEach(function(t,n){return t._id===o?e.todos.splice(n,1):void 0})})},o.prototype.login=function(){console.log("in login"),DZ.login(function(o){o.authResponse?(console.log("Welcome!  Fetching your information.... "),DZ.api("/user/me",function(o){console.log("Good to see you, "+o.name+".")})):console.log("User cancelled login or did not fully authorize.")},{perms:"basic_access,email"})},o.prototype.status=function(){DZ.getLoginStatus(function(o){console.log("status"),o.authResponse?console.log("logged in"):console.log("not logged in")})},o.prototype.myName=function(){DZ.api("/user/me",function(o){console.log("My name",o.name)})},o=__decorate([core_1.Component({selector:"todo-cmp",templateUrl:"todo/templates/todo.html",styleUrls:["todo/styles/todo.css"],providers:[todo_service_1.TodoService]}),__param(0,core_1.Inject(common_1.FormBuilder)),__param(1,core_1.Inject(todo_service_1.TodoService)),__metadata("design:paramtypes",[common_1.FormBuilder,todo_service_1.TodoService])],o)}();exports.TodoCmp=TodoCmp;